version: '3'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: strapi-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_CLIENT: ${DATABASE_CLIENT:-sqlite}
      DATABASE_HOST: ${DATABASE_HOST:-db}
      DATABASE_PORT: ${DATABASE_PORT:-5432}
      DATABASE_NAME: ${DATABASE_NAME:-strapi}
      DATABASE_USERNAME: ${DATABASE_USERNAME:-strapi}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD:-strapi}
      JWT_SECRET: ${JWT_SECRET:-something-very-secret}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET:-another-secret-token}
      APP_KEYS: ${APP_KEYS:-key1,key2,key3,key4}
      API_TOKEN_SALT: ${API_TOKEN_SALT:-a-random-salt}
    volumes:
      - ./backend/public/uploads:/app/public/uploads
      # Uncomment if using SQLite
      # - ./backend/database:/app/database
    networks:
      - app-network
    depends_on:
      - db

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: nuxt-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NUXT_PUBLIC_API_URL: ${NUXT_PUBLIC_API_URL:-https://api.olalao-jeanne.fr}
    networks:
      - app-network
    depends_on:
      - backend

  db:
    image: postgres:14-alpine
    container_name: strapi-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME:-strapi}
      POSTGRES_USER: ${DATABASE_USERNAME:-strapi}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD:-strapi}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - backend
      - client

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data: